from fastapi import Request, FastAPI, HTTPException, status
from fastapi.middleware.cors import CORSMiddleware
from action_model import action_function
from BaseModels import ActionItems, ScrapedData


app = FastAPI()
origins = ["*"]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_methods=["*"],
    allow_headers=["*"],
)

scraped_data = "Hello World!"

@app.get("/")
def base_URL():
    return "Hello Dropbox!"


@app.get("/action", response_model=ActionItems)
def action_items():
    print("Processing the action items with data: ", str(scraped_data))
    sentences = action_function(scraped_data)
    print("Here are the action words generated by our model: " +
          str(sentences))
    return {"data": sentences}


@app.post("/scraper")
def scraper(req: ScrapedData):
    print("Got the scraped data with the name: " + str(req.name))
    global scraped_data
    scraped_data = req.data
    return {"message": "Data received! Call /action to get the action items."}
